// Generated by view binder compiler. Do not edit!
package com.example.firebasetest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.firebasetest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventAuctionRegisterItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnItemList;

  @NonNull
  public final Button btnItemRegist;

  @NonNull
  public final Button inputItemCategory;

  @NonNull
  public final EditText inputItemExplain;

  @NonNull
  public final ImageView inputItemImg;

  @NonNull
  public final EditText inputItemName;

  @NonNull
  public final EditText inputItemPrice;

  @NonNull
  public final EditText inputTitle;

  @NonNull
  public final TextView writeText;

  private ActivityEventAuctionRegisterItemBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnItemList, @NonNull Button btnItemRegist, @NonNull Button inputItemCategory,
      @NonNull EditText inputItemExplain, @NonNull ImageView inputItemImg,
      @NonNull EditText inputItemName, @NonNull EditText inputItemPrice,
      @NonNull EditText inputTitle, @NonNull TextView writeText) {
    this.rootView = rootView;
    this.btnItemList = btnItemList;
    this.btnItemRegist = btnItemRegist;
    this.inputItemCategory = inputItemCategory;
    this.inputItemExplain = inputItemExplain;
    this.inputItemImg = inputItemImg;
    this.inputItemName = inputItemName;
    this.inputItemPrice = inputItemPrice;
    this.inputTitle = inputTitle;
    this.writeText = writeText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventAuctionRegisterItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventAuctionRegisterItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event_auction_register_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventAuctionRegisterItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_itemList;
      Button btnItemList = ViewBindings.findChildViewById(rootView, id);
      if (btnItemList == null) {
        break missingId;
      }

      id = R.id.btn_itemRegist;
      Button btnItemRegist = ViewBindings.findChildViewById(rootView, id);
      if (btnItemRegist == null) {
        break missingId;
      }

      id = R.id.input_itemCategory;
      Button inputItemCategory = ViewBindings.findChildViewById(rootView, id);
      if (inputItemCategory == null) {
        break missingId;
      }

      id = R.id.input_itemExplain;
      EditText inputItemExplain = ViewBindings.findChildViewById(rootView, id);
      if (inputItemExplain == null) {
        break missingId;
      }

      id = R.id.input_itemImg;
      ImageView inputItemImg = ViewBindings.findChildViewById(rootView, id);
      if (inputItemImg == null) {
        break missingId;
      }

      id = R.id.input_itemName;
      EditText inputItemName = ViewBindings.findChildViewById(rootView, id);
      if (inputItemName == null) {
        break missingId;
      }

      id = R.id.input_itemPrice;
      EditText inputItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (inputItemPrice == null) {
        break missingId;
      }

      id = R.id.input_title;
      EditText inputTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputTitle == null) {
        break missingId;
      }

      id = R.id.write_text;
      TextView writeText = ViewBindings.findChildViewById(rootView, id);
      if (writeText == null) {
        break missingId;
      }

      return new ActivityEventAuctionRegisterItemBinding((LinearLayout) rootView, btnItemList,
          btnItemRegist, inputItemCategory, inputItemExplain, inputItemImg, inputItemName,
          inputItemPrice, inputTitle, writeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
