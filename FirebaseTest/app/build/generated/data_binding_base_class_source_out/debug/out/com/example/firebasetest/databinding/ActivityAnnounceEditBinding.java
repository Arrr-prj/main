// Generated by view binder compiler. Do not edit!
package com.example.firebasetest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.firebasetest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnnounceEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnEditA;

  @NonNull
  public final EditText inputContent;

  @NonNull
  public final EditText inputTitle;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView writeText;

  private ActivityAnnounceEditBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnEditA, @NonNull EditText inputContent, @NonNull EditText inputTitle,
      @NonNull Toolbar toolbar, @NonNull TextView writeText) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnEditA = btnEditA;
    this.inputContent = inputContent;
    this.inputTitle = inputTitle;
    this.toolbar = toolbar;
    this.writeText = writeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnnounceEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnnounceEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_announce_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnnounceEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_editA;
      Button btnEditA = ViewBindings.findChildViewById(rootView, id);
      if (btnEditA == null) {
        break missingId;
      }

      id = R.id.input_content;
      EditText inputContent = ViewBindings.findChildViewById(rootView, id);
      if (inputContent == null) {
        break missingId;
      }

      id = R.id.input_title;
      EditText inputTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.write_text;
      TextView writeText = ViewBindings.findChildViewById(rootView, id);
      if (writeText == null) {
        break missingId;
      }

      return new ActivityAnnounceEditBinding((ConstraintLayout) rootView, btnCancel, btnEditA,
          inputContent, inputTitle, toolbar, writeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
