// Generated by view binder compiler. Do not edit!
package com.example.firebasetest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.firebasetest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final ImageButton btnHome;

  @NonNull
  public final Button btnItemRegist;

  @NonNull
  public final Button inputItemCategory;

  @NonNull
  public final EditText inputItemExplain;

  @NonNull
  public final EditText inputItemId;

  @NonNull
  public final ImageView inputItemImg;

  @NonNull
  public final EditText inputItemPrice;

  @NonNull
  public final TextView inputItemTitle;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView writeText;

  private ActivityEditItemBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnBack,
      @NonNull Button btnCancel, @NonNull ImageButton btnHome, @NonNull Button btnItemRegist,
      @NonNull Button inputItemCategory, @NonNull EditText inputItemExplain,
      @NonNull EditText inputItemId, @NonNull ImageView inputItemImg,
      @NonNull EditText inputItemPrice, @NonNull TextView inputItemTitle, @NonNull Toolbar toolbar,
      @NonNull TextView writeText) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnCancel = btnCancel;
    this.btnHome = btnHome;
    this.btnItemRegist = btnItemRegist;
    this.inputItemCategory = inputItemCategory;
    this.inputItemExplain = inputItemExplain;
    this.inputItemId = inputItemId;
    this.inputItemImg = inputItemImg;
    this.inputItemPrice = inputItemPrice;
    this.inputItemTitle = inputItemTitle;
    this.toolbar = toolbar;
    this.writeText = writeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      Button btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_home;
      ImageButton btnHome = ViewBindings.findChildViewById(rootView, id);
      if (btnHome == null) {
        break missingId;
      }

      id = R.id.btn_itemRegist;
      Button btnItemRegist = ViewBindings.findChildViewById(rootView, id);
      if (btnItemRegist == null) {
        break missingId;
      }

      id = R.id.input_itemCategory;
      Button inputItemCategory = ViewBindings.findChildViewById(rootView, id);
      if (inputItemCategory == null) {
        break missingId;
      }

      id = R.id.input_itemExplain;
      EditText inputItemExplain = ViewBindings.findChildViewById(rootView, id);
      if (inputItemExplain == null) {
        break missingId;
      }

      id = R.id.input_itemId;
      EditText inputItemId = ViewBindings.findChildViewById(rootView, id);
      if (inputItemId == null) {
        break missingId;
      }

      id = R.id.input_itemImg;
      ImageView inputItemImg = ViewBindings.findChildViewById(rootView, id);
      if (inputItemImg == null) {
        break missingId;
      }

      id = R.id.input_itemPrice;
      EditText inputItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (inputItemPrice == null) {
        break missingId;
      }

      id = R.id.input_itemTitle;
      TextView inputItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputItemTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.write_text;
      TextView writeText = ViewBindings.findChildViewById(rootView, id);
      if (writeText == null) {
        break missingId;
      }

      return new ActivityEditItemBinding((ConstraintLayout) rootView, btnBack, btnCancel, btnHome,
          btnItemRegist, inputItemCategory, inputItemExplain, inputItemId, inputItemImg,
          inputItemPrice, inputItemTitle, toolbar, writeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
